<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/*“Given a string that contains both letters and numbers, write a function that pulls out all the numbers then returns their sum.
 
 Sample input and output
 The string “a1b2c3” should return 6 (1 + 2 + 3).
 The string “a10b20c30” should return 60 (10 + 20 + 30).
 The string “h8ers” should return “8”.”
 
 Excerpt From: Paul Hudson. “Swift Coding Challenges”. Apple Books. */

func pullSum(from input: String) -&gt; Int {
    var stringWithSpaces = ""
    
    // replace letters with spaces
    for char in input {
        if !char.isNumber {
            stringWithSpaces.append(" ")
        } else {
            stringWithSpaces.append(char)
        }
    }
    
    // Break the string into an array of Int numbers
    let numbers = stringWithSpaces.split(separator: " ").map { Int($0) ?? 0 }
    
    // Sum the elements of the array
    let sum = numbers.reduce(0, { $0 + $1 })
    
    return sum
}

assert(pullSum(from: "a1bbb2c3") == 6)
assert(pullSum(from: "a10b20c30") == 60)
assert(pullSum(from: "h8ers") == 8)

func challenge24a(string: String) -&gt; Int {
    var currentNumber = ""
    var sum = 0
    
    for letter in string {
        let strLetter = String(letter)
        
        if Int(strLetter) != nil {
            currentNumber += strLetter
        } else {
            sum += Int(currentNumber) ?? 0
            currentNumber = ""
        }
    }
    
    sum += Int(currentNumber) ?? 0
    return sum
}
</string>
			<key>ModifiedRange</key>
			<string>{1, 1425}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
